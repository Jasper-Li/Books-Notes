###1. Exercise
Encrypt the input character just for uppercase and lowercase lettes.   
If inputs are 'abc', outputs are 'efg'.  
If inputs are 'wxyz', outputs are 'abcd'.  

###2. Smali Code

	.method public static main([Ljava/lang/String;)V
		.registers 7
		.annotation system Ldalvik/annotation/Throws;
			value = {
				Ljava/io/IOException;
			}
		.end annotation

		.prologue
		sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

		const-string v1, "Input a line characters:"

		invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

		:cond_7
		sget-object v0, Ljava/lang/System;->in:Ljava/io/InputStream;

		invoke-virtual {v0}, Ljava/io/InputStream;->read()I

		move-result v0

		const/16 v1, 0x61

		if-lt v0, v1, :cond_15 ##if v0<v1

		const/16 v1, 0x76

		if-le v0, v1, :cond_1d ##if v0 <= v1

		:cond_15
		const/16 v1, 0x41

		if-lt v0, v1, :cond_35

		const/16 v1, 0x56

		if-gt v0, v1, :cond_35  ##if v0 > v1

		:cond_1d
		add-int/lit8 v0, v0, 0x4

		:cond_1f
		:goto_1f
		sget-object v1, Ljava/lang/System;->out:Ljava/io/PrintStream;

		const-string v2, "%c"

		const/4 v3, 0x1

		new-array v3, v3, [Ljava/lang/Object;

		const/4 v4, 0x0

		invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

		move-result-object v5

		aput-object v5, v3, v4

		invoke-virtual {v1, v2, v3}, Ljava/io/PrintStream;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;

		const/16 v1, 0xa

		if-ne v0, v1, :cond_7

		return-void

		:cond_35
		const/16 v1, 0x77

		if-lt v0, v1, :cond_3d

		const/16 v1, 0x7a

		if-le v0, v1, :cond_45

		:cond_3d
		const/16 v1, 0x57

		if-lt v0, v1, :cond_1f

		const/16 v1, 0x5a

		if-gt v0, v1, :cond_1f

		:cond_45
		add-int/lit8 v0, v0, -0x16

		goto :goto_1f
	.end method
###3. pseudo-code
	public static void main(String[] args) throws IOException
	{
		System.out.println("Input a line character:");
		
		do
		{
			int v0 =  System.in.read();

			if(v0<0x61) :cond_15	// 0x61 = 'a'
			if(v0<= 0x76) :cond_1d  // 0x76 = 'v'
		
			:cond_15
				if(v0<0x41 || v0 >0x56) :cond_35 //0x41 = 'A', 0x56 = 'V'

			:cond_1d
				v0 += 4;

			:cond_1f
			:goto_1f
				System.out.printf("%c", v0);
		}while(v0 != 0xa);
		return void;

		
		:cond_35
			if(v0<0x77) :cond_3d; //0x77 = 'w'
			if(v0<= 0x7a) :cond_45;  // 0x7a = 'z'

			:cond_3d
				if(v0<0x57 || v0 > 0x5a) :cond_1f // 0x57 = 'W', 0x5a = 'Z'
			
			:cond_45
				v0 -= 0x16;
				goto :goto_1f;
	}

###4. Concise Pseudo-Code
	public static void main(String[] args) throws IOException
	{
		System.out.println("Input a line character:");
		do
		{
			int v0 = System.in.read();

			if((v0 >='a' && v0 <= 'v') || (v0 >= 'A' && v0 <= 'V'))
				v0 += 4;
			else if((v0 >='w' && v0 <= 'z') ||  (v0 >= 'W' && v0 <='Z') )
				v0 -=0x16;

			System.out.printf(%c", v0);
		}while(v0!='\n');
	}

